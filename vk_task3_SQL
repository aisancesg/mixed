CREATE TABLE users (
  date DATE,
  user_id INTEGER,
  age INTEGER
);
CREATE TABLE audio (
  date DATE,
  user_id INTEGER,
  starts INTEGER
);

INSERT INTO users VALUES 
                        ('2023-01-01', 1, 1),
                        ('2022-12-31', 1, 1),
                        ('2023-01-01', 2, 15),
                        ('2023-01-01', 3, 26),
                        ('2023-01-01', 4, 36),
                        ('2023-01-01', 5, 56),
                        ('2023-01-01', 6, 101),
                        ('2023-01-01', 7, 14),
                        ('2023-01-01', 8, 25),
                        ('2023-01-01', 9, 35),
                        ('2023-01-01', 10, 55),
                        ('2023-01-01', 11, 100),
                        ('2023-01-01', 12, 2),
                        ('2023-01-01', 13, 1),
                        ('2023-01-02', 1, 1),
                        ('2023-01-02', 2, 15),
                        ('2023-01-02', 13, 1),
                        ('2023-01-02', 14, 15),
                        ('2023-01-03', 15, 26),
                        ('2023-01-03', 16, 26),
                        ('2023-01-30', 17, 26),
                        ('2023-01-30', 18, 3),
                        ('2023-01-31', 19, 4);
                        
 INSERT INTO audio VALUES 
                        ('2023-01-01', 1, 10),
                        ('2022-12-31', 1, 1),
                        ('2023-01-02', 1, 20),
                        ('2023-01-04', 1, 20),
                        ('2023-01-01', 2, 100),
                        ('2023-01-01', 3, 100),
                        ('2023-01-05', 5, 50),
                        ('2023-01-03', 6, 101),
                        ('2023-01-01', 7, 25),
                        ('2023-01-01', 12, 20),
                        ('2023-01-01', 13, 0),
                        ('2023-01-03', 1, 0),
                        ('2023-01-02', 2, 1),
                        ('2023-01-01', 8, 60),
                        ('2023-01-01', 9, 0),
                        ('2023-01-01', 10, 1),
                        ('2023-01-01', 11, 100),
                        ('2023-01-01', 4, 0),
                        ('2023-01-02', 4, 1),
                        ('2023-01-03', 4, 1),
                        ('2023-01-30', 12, 15),
                        ('2023-02-02', 13, 1),
                        ('2023-01-02', 14, 150),
                        ('2023-02-03', 15, 200);     
                        
select 
    avg(a.starts)*count(a.date)/30 as daily_avg_starts, 
    1.0*count(a.user_id)/30 as daily_avg_users,
  CASE
    WHEN u.age >=1 AND u.age <=14 THEN '1-14'
    WHEN u.age >=15 AND u.age <=25 THEN '15-25'
    WHEN u.age >=26 AND u.age <=35 THEN '26-35'
    WHEN u.age >=36 AND u.age <=55 THEN '36-55'
    WHEN u.age >=56 AND u.age <=100 THEN '56-100'
  END AS age_category
from users as u inner join audio as a on u.date=a.date and u.user_id=a.user_id
where a.starts>0 and a.date between '2023-01-01' and '2023-01-30'
group by age_category
order by age_category

#считаю, что date в обеих таблицах -- это день, про который мы знаем, сколько было прослушиваний у конкретного пользователя
#считаю, что период фиксирован, у меня это с 01.01.2023 по 30.01.2023
#учитываю случай, что если в день 0 пользователей, 0 прослушиваний, то этот день не занесен в таблицы
#поэтому в формуле для поиска среднедневного количества прослушиваний я умножаю на count(audio.date) 
#считаю, что на следующих входных данных в одной категории:
# 01.01.2023 у user_1 10 прослушиваний, у user_2 20 прослушиваний
# 02.01.2023 у user_1 100 прослушиваний, у user_2 200 прослушиваний
# в остальные дни 0 пользователей, 0 прослушиваний
# (где user_1 и user_2 в одной возрастной категории)
#то в этой категории:
#среднедневное количество прослушиваний = (10+20+100+200)/30
#а среднедневное количество пользователей = (2+2)/30
